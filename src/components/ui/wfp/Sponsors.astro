---
import Dropdown from "@/components/starwind/dropdown";
import Tooltip from "@/components/starwind/tooltip";
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";

interface Props {
	class?: string;
	type?: "header" | "dropdown";
}

const { class: className, type = "header" } = Astro.props;

const sponsors = await getCollection("sponsors");
sponsors.sort((a, b) => a.data.name.localeCompare(b.data.name));
---

{
	type === "header" ? (
		<div class:list={["flex flex-row align-middle", className]}>
			{sponsors.map((sponsor) => (
				<Tooltip.Root>
					<Tooltip.Trigger>
						<a
							href={sponsor.data.url}
							target="_blank"
							style={`--sponsor-color: ${sponsor.data.color}`}
							class={`bg-[var(--sponsor-color)] hover:bg-white text-white hover:text-[var(--sponsor-color)] px-2 h-full flex items-center`}
							aria-label={sponsor.data.name}
						>
							<Icon
								name={sponsor.data.icon}
								class="h-5 w-5 fill-current"
							/>
						</a>
					</Tooltip.Trigger>
					<Tooltip.Content side="bottom">
						{sponsor.data.tooltip}
					</Tooltip.Content>
				</Tooltip.Root>
			))}
		</div>
	) : (
		sponsors.map((sponsor) => (
			<Dropdown.Item
				as="a"
				href={sponsor.data.url}
				target="_blank"
				style={`--sponsor-color: ${sponsor.data.color}`}
				class="text-[var(--sponsor-color)] hover:bg-[var(--sponsor-color)] hover:text-white cursor-pointer"
			>
				<Icon name={sponsor.data.icon} class="h-5 w-5 fill-current" />
				{sponsor.data.name}
			</Dropdown.Item>
		))
	)
}
