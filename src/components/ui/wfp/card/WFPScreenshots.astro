---
import Button from "@/components/starwind/button";
import {
	Dialog,
	DialogTrigger,
	DialogContent,
	DialogClose,
} from "@/components/starwind/dialog";
import { Picture } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { Icon } from "astro-icon/components";
import Youtube from "@/components/widgets/Youtube.astro";

interface Props {
	entry: CollectionEntry<"wfp-games">;
}

const { entry } = Astro.props;
const { screenshots } = entry.data;
if (!screenshots) return;
---

<Dialog>
	<DialogTrigger asChild>
		<Button variant="primary" class="ml-4">
			<Icon name="images" class="fill-current" />Screenshots
		</Button>
	</DialogTrigger>
	<DialogContent
		style={`background-image: url(${screenshots.background}); background-size: cover; background-position: center;`}
		class="screenshot-modal h-[calc(95dvh)] max-h-[calc(95dvh)] w-[95vw] max-w-[95vw] border-transparent bg-white"
	>
		<div class="h-full w-full overflow-auto">
			<div
				class="gallery grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4"
			>
				{
					screenshots.youtube ? (
						<div class="w-full aspect-video">
							<Youtube src={screenshots.youtube} />
						</div>
					) : null
				}
				{
					screenshots.images && screenshots.images.length > 0 ? (
						screenshots.images.map((img) => (
							<a
								class="w-full aspect-video bg-black"
								href={img}
								target="_blank"
							>
								<img
									src={img}
									alt="Screenshot"
									loading="lazy"
									decoding="async"
									class="w-full h-full object-contain"
									width="1920"
									height="1080"
								/>
							</a>
						))
					) : (
						<a
							class="w-full aspect-video bg-black"
							href={entry.data.after.src}
							target="_blank"
						>
							<Picture
								src={entry.data.after}
								alt="Screenshot"
								class="w-full h-full object-contain bg-black"
								formats={["avif", "webp"]}
							/>
						</a>
					)
				}
			</div>
		</div>
		<div
			class="absolute bottom-0 left-0 right-0 flex flex-row justify-center items-center p-2 gap-2"
		>
			<Button variant="warning" target="_blank"> Download </Button>
			<DialogClose asChild>
				<Button variant="default">Close</Button>
			</DialogClose>
		</div>
	</DialogContent>
</Dialog>

<script>
	import lightGallery from "lightgallery";
	import "lightgallery/css/lightgallery.css";

	const modals = document.querySelectorAll(
		".screenshot-modal",
	) as NodeListOf<HTMLDialogElement>;

	modals.forEach((modal) => {
		const gallery = modal.querySelector(".gallery") as HTMLDivElement;

		lightGallery(gallery, {
			container: modal,
			selector: "a",
			download: false,
			thumbnail: false,
			speed: 500,
		});
	});
</script>
