---
import X from "@tabler/icons/outline/x.svg";
import type { HTMLAttributes } from "astro/types";
import { tv } from "tailwind-variants";

type Props = HTMLAttributes<"dialog"> & {
	/**
	 * Open and close animation duration in milliseconds
	 */
	animationDuration?: number;
};

export const dialogBackdrop = tv({
	base: [
		"starwind-dialog-backdrop fixed inset-0 top-0 left-0 z-50 hidden h-screen w-screen bg-black/80",
		"data-[state=open]:animate-in fade-in",
		"data-[state=closed]:animate-out data-[state=closed]:fill-mode-forwards fade-out",
	],
});

export const dialogContent = tv({
	base: [
		"fixed left-1/2 top-1/2 z-50 -translate-x-1/2 -translate-y-1/2",
		"bg-background w-[95vw] h-[95vh] max-w-none border p-4 sm:p-8 shadow-lg sm:rounded-lg overflow-y-auto",
		"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fill-mode-forwards",
		"fade-in zoom-in-95 slide-in-from-bottom-2",
		"fade-out zoom-out-95 slide-out-to-bottom-2",
	],
});

export const dialogCloseButton = tv({
	base: [
		"starwind-dialog-close text-muted-foreground",
		"absolute top-5.5 right-5.5 rounded-sm opacity-70 transition-opacity hover:opacity-100 disabled:pointer-events-none",
		"focus-visible:outline-outline focus-visible:outline-2 focus-visible:outline-offset-2",
	],
});

const { class: className, animationDuration = 200, ...rest } = Astro.props;
---

<!-- dialog overlay -->
<div
	class={dialogBackdrop()}
	data-state="closed"
	data-slot="dialog-backdrop"
	style={{ animationDuration: `${animationDuration}ms` }}
>
</div>

<dialog
	class={dialogContent({ class: className })}
	data-state="closed"
	data-slot="dialog-content"
	{...rest}
	style={{ animationDuration: `${animationDuration}ms` }}
>
	<slot />
	<button
		type="button"
		class={dialogCloseButton()}
		data-dialog-close
		aria-label="Close dialog"
	>
		<X class="size-5" />
		<span class="sr-only">Close</span>
	</button>
</dialog>
